// Mocks generated by Mockito 5.1.0 from annotations
// in ofertas/test/features/login/data/data_sources/google_sign_in_account_remote_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i2;
import 'package:google_sign_in/google_sign_in.dart' as _i3;
import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGoogleAuthProvider_0 extends _i1.Fake
    implements _i2.GoogleAuthProvider {}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i3.GoogleSignIn {
  MockGoogleSignIn() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.SignInOption get signInOption =>
      (super.noSuchMethod(Invocation.getter(#signInOption),
          returnValue: _i4.SignInOption.standard) as _i4.SignInOption);
  @override
  List<String> get scopes =>
      (super.noSuchMethod(Invocation.getter(#scopes), returnValue: <String>[])
          as List<String>);
  @override
  _i5.Stream<_i3.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(Invocation.getter(#onCurrentUserChanged),
              returnValue: Stream<_i3.GoogleSignInAccount?>.empty())
          as _i5.Stream<_i3.GoogleSignInAccount?>);
  @override
  _i5.Future<_i3.GoogleSignInAccount?> signInSilently(
          {bool? suppressErrors = true, bool? reAuthenticate = false}) =>
      (super.noSuchMethod(
              Invocation.method(#signInSilently, [], {
                #suppressErrors: suppressErrors,
                #reAuthenticate: reAuthenticate
              }),
              returnValue: Future<_i3.GoogleSignInAccount?>.value())
          as _i5.Future<_i3.GoogleSignInAccount?>);
  @override
  _i5.Future<bool> isSignedIn() =>
      (super.noSuchMethod(Invocation.method(#isSignedIn, []),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<_i3.GoogleSignInAccount?> signIn() =>
      (super.noSuchMethod(Invocation.method(#signIn, []),
              returnValue: Future<_i3.GoogleSignInAccount?>.value())
          as _i5.Future<_i3.GoogleSignInAccount?>);
  @override
  _i5.Future<_i3.GoogleSignInAccount?> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
              returnValue: Future<_i3.GoogleSignInAccount?>.value())
          as _i5.Future<_i3.GoogleSignInAccount?>);
  @override
  _i5.Future<_i3.GoogleSignInAccount?> disconnect() =>
      (super.noSuchMethod(Invocation.method(#disconnect, []),
              returnValue: Future<_i3.GoogleSignInAccount?>.value())
          as _i5.Future<_i3.GoogleSignInAccount?>);
  @override
  _i5.Future<bool> requestScopes(List<String>? scopes) =>
      (super.noSuchMethod(Invocation.method(#requestScopes, [scopes]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [GoogleAuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleAuthProvider extends _i1.Mock
    implements _i2.GoogleAuthProvider {
  MockGoogleAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get scopes =>
      (super.noSuchMethod(Invocation.getter(#scopes), returnValue: <String>[])
          as List<String>);
  @override
  Map<dynamic, dynamic> get parameters =>
      (super.noSuchMethod(Invocation.getter(#parameters),
          returnValue: <dynamic, dynamic>{}) as Map<dynamic, dynamic>);
  @override
  String get providerId =>
      (super.noSuchMethod(Invocation.getter(#providerId), returnValue: '')
          as String);
  @override
  _i2.GoogleAuthProvider addScope(String? scope) =>
      (super.noSuchMethod(Invocation.method(#addScope, [scope]),
          returnValue: _FakeGoogleAuthProvider_0()) as _i2.GoogleAuthProvider);
  @override
  _i2.GoogleAuthProvider setCustomParameters(
          Map<dynamic, dynamic>? customOAuthParameters) =>
      (super.noSuchMethod(
          Invocation.method(#setCustomParameters, [customOAuthParameters]),
          returnValue: _FakeGoogleAuthProvider_0()) as _i2.GoogleAuthProvider);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i3.GoogleSignInAuthentication {
  MockGoogleSignInAuthentication() {
    _i1.throwOnMissingStub(this);
  }
}
