// Mocks generated by Mockito 5.1.0 from annotations
// in ofertas/test/features/login/data/repositories/user_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ofertas/core/network/network_info.dart' as _i3;
import 'package:ofertas/features/login/data/data_sources/google_sign_in_account_local_data_source.dart'
    as _i6;
import 'package:ofertas/features/login/data/data_sources/google_sign_in_account_remote_data_source.dart'
    as _i5;
import 'package:ofertas/features/login/domain/entities/user_data.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserData_0 extends _i1.Fake implements _i2.UserData {}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i3.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isConnected() =>
      (super.noSuchMethod(Invocation.method(#isConnected, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [GoogleSignInAccountRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAccountRemoteDataSource extends _i1.Mock
    implements _i5.GoogleSignInAccountRemoteDataSource {
  MockGoogleSignInAccountRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserData?> googleLogIn() => (super.noSuchMethod(
      Invocation.method(#googleLogIn, []),
      returnValue: Future<_i2.UserData?>.value()) as _i4.Future<_i2.UserData?>);
  @override
  _i4.Future<void> googleLogOut() =>
      (super.noSuchMethod(Invocation.method(#googleLogOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [GoogleSignInAccountLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAccountLocalDataSource extends _i1.Mock
    implements _i6.GoogleSignInAccountLocalDataSource {
  MockGoogleSignInAccountLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserData> getGoogleAccount() =>
      (super.noSuchMethod(Invocation.method(#getGoogleAccount, []),
              returnValue: Future<_i2.UserData>.value(_FakeUserData_0()))
          as _i4.Future<_i2.UserData>);
  @override
  _i4.Future<void> cacheGoogleAccount(_i2.UserData? modelToCache) => (super
      .noSuchMethod(Invocation.method(#cacheGoogleAccount, [modelToCache]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
